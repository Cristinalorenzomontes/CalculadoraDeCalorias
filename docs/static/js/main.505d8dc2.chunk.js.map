{"version":3,"sources":["components/Input/Input.js","components/Form/Form.js","components/Results/Result.js","App.js","index.js"],"names":["Input","id","type","placeholder","options","onChange","value","map","option","key","text","className","Form","inputFields","onInputChange","inputValues","label","ev","Result","resultado","ganarMasa","perderGrasa","proteinasVolumen","proteinasDefinicion","grasasVolumen","grasasDefinicion","carbosVolumen","carbosDefinicion","toFixed","initialFormState","gender","age","weight","height","phisicalActivity","App","useState","setInputValues","isFormSubmited","setIsFormSubmited","parseInt","resultadoGanarMasa","parseFloat","resultadoPerderGrasa","getMacronutrients","number","resultadoProteinasVolumen","resultadoProteinasDefinicion","resultadoGrasasVolumen","resultadoGrasasDefinicion","resultadoCarbosVolumen","resultadoCarbosDefinicion","formData","target","onClick","alert","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.505d8dc2.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nconst Input = ({id, type, placeholder, options, onChange, value}) => {\r\n\r\n if (type === 'singleselect') {\r\n      return (\r\n        <select id={id} placeholder={placeholder} onChange={onChange} value={value}\r\n        >\r\n              {options.map((option) => (\r\n                  <option key={option.key} value={option.value}>{option.text}</option>\r\n          ))}\r\n        </select>\r\n      );\r\n    }\r\n  \r\n    return (\r\n      <input\r\n        id={id}\r\n        placeholder={placeholder}\r\n        type={type}\r\n        onChange={onChange}\r\n        value={value}\r\n        className='input'\r\n      ></input>\r\n    );\r\n}\r\n\r\nexport default Input;","import React from 'react';\r\nimport Input from '../Input/Input';\r\n\r\n\r\nconst Form = ({inputFields, onInputChange, inputValues}) => {\r\n\r\n  return (\r\n    <form className='form'>\r\n     \r\n    {inputFields.map(({label, id, type, placeholder, options}) => \r\n    <>\r\n            <label className='label'>{label}</label>\r\n            <Input id={id} type={type} placeholder={placeholder} options={options} value={inputValues[id]} onChange={(ev) => onInputChange(ev, id)}\r\n />\r\n    </>)}\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Form;","import React from 'react';\r\n\r\nconst Result = ({resultado, ganarMasa, perderGrasa, proteinasVolumen, proteinasDefinicion, grasasVolumen, grasasDefinicion, carbosVolumen, carbosDefinicion}) => {\r\n    return (\r\n        <>\r\n            <h3 className='h3'>Tus calorías diarias para mantnerte son: {resultado.toFixed(2)}.</h3>\r\n            <h3 className='h3'>Tus calorías diarias para ganar masa muscular son:  {ganarMasa.toFixed(2)}.</h3>\r\n            <h3 className='h3'>Tus calorías diarias para perder grasa son:  {perderGrasa.toFixed(2)}.</h3>\r\n            <h3 className='h3'>Tus proteínas diarias recomendadas para ganar volumen son:  {proteinasVolumen.toFixed(2)}.</h3>\r\n            <h3 className='h3'>Tus proteínas diarias recomendadas para ganar definición son:  {proteinasDefinicion.toFixed(2)}.</h3>\r\n            <h3 className='h3'>Tus grasas diarias recomendadas para ganar volumen son:  {grasasVolumen.toFixed(2)}.</h3>\r\n            <h3 className='h3'>Tus grasas diarias recomendadas para ganar definición son:  {grasasDefinicion.toFixed(2)}.</h3>\r\n            <h3 className='h3'>Tus hidratos diarios recomendados para ganar volumen son:  {carbosVolumen.toFixed(2)}.</h3>\r\n            <h3 className='h3'>Tus hidratos diarios recomendados para ganar definición:  {carbosDefinicion.toFixed(2)}.</h3>\r\n            <h3 className='h3-advice'>Todos estos datos son orientativos, para tomar cualquier decisión sobre tu dieta y rutinas, consulta siempre con profesionales en la materia. Recuerda sobre todo que el cuerpo perfecto es el tuyo.</h3>\r\n        </>\r\n    )\r\n};\r\n  \r\n  export default Result;","import React, {useState} from 'react';\nimport './stylesheet/app.scss';\nimport './stylesheet/header.scss'\nimport './stylesheet/main.scss';\nimport './stylesheet/form.scss';\nimport './stylesheet/input.scss';\nimport './stylesheet/result.scss';\nimport \"./stylesheet/footer.scss\";\nimport Form from './components/Form/Form';\nimport formData from './data/form.json';\nimport Result from './components/Results/Result';\n\n\nconst initialFormState = {\ngender: \"n\", \nage: \"\", \nweight: \"\",\nheight: \"\",\nphisicalActivity: \"n\"}\n\nconst App = () => {\n  const [inputValues, setInputValues] = useState(initialFormState) \n  const [isFormSubmited, setIsFormSubmited] = useState(false)\n\n  const handleInputChange = (ev, id) => setInputValues({ ...inputValues, [id]: ev.target.value });\n\n  const handdleButton = () => {\n    const {gender,\n      age,\n      weight,\n      height,\n      phisicalActivity } = inputValues;\n  \n  \n  if (gender === \"\"){\n        alert('Necesitamos conocer tu sexo para ajustar el cálculo lo máximo posible')\n        return\n        }\n  if (age === \"\"){\n    alert('La edad es solo un número, ¡pon tu edad anda!')\n    return\n    }\n  if (height === \"\"){\n      alert('No olvides poner tu altura')\n      return\n      }\n  if (weight === \"\"){\n        alert('Tu peso no te define, ¡así que ponlo sin miedo')\n        return\n  }\n    if (phisicalActivity === \"\") {\n      alert('¿Cuánto deporte haces semanalmente?')\n      return\n  }  \n\n    setIsFormSubmited(true)\n  }\n\nlet resultado = ((9.99 * parseInt(inputValues.weight)) + (6.25 * parseInt(inputValues.height)) + (4.92 * parseInt(inputValues.age)) - 50) - 200\nif (inputValues.gender === \"f\") resultado = resultado - 200\nconst multiplier = parseFloat(inputValues.phisicalActivity)\nresultado = resultado * multiplier;\n\nlet resultadoGanarMasa = resultado + 300;\nlet resultadoPerderGrasa = resultado - 300;\n\nconst getMacronutrients = (number) => inputValues.weight * number \n\nconst resultadoProteinasVolumen = getMacronutrients(2.5)\nconst resultadoProteinasDefinicion = getMacronutrients(3)\nconst resultadoGrasasVolumen =  getMacronutrients(1)\nconst resultadoGrasasDefinicion = getMacronutrients(0.75)\n\nlet resultadoCarbosVolumen = ((resultadoGanarMasa - (resultadoProteinasVolumen * 4) - (resultadoGrasasVolumen * 9)) / 4);\nlet resultadoCarbosDefinicion = ((resultadoPerderGrasa - (resultadoProteinasDefinicion * 4) - (resultadoGrasasDefinicion * 9)) / 4);\n\n\n  const handleReset = () => {\n    setInputValues(initialFormState);\n    setIsFormSubmited(false)\n  }\n  \n  return (\n  <div className=\"App\">\n      <header className=\"header\">\n      <h1 className=\"h1\">Calcular calorías diarias según tus objetivos</h1>\n      <h2 className=\"h2\">Vamos a conocernos un poquito más</h2>\n      </header>\n      <main className=\"main\">\n      <Form inputFields={formData.inputFields} onInputChange={handleInputChange} inputValues={inputValues} />\n      <button onClick={handdleButton} className=\"button\">Calcular</button>\n      {isFormSubmited && <>\n      <Result resultado={resultado} ganarMasa={resultadoGanarMasa} perderGrasa={resultadoPerderGrasa} proteinasVolumen={resultadoProteinasVolumen} proteinasDefinicion={resultadoProteinasDefinicion} grasasVolumen={resultadoGrasasVolumen} grasasDefinicion={resultadoGrasasDefinicion} carbosVolumen={resultadoCarbosVolumen} carbosDefinicion={resultadoCarbosDefinicion}/>\n      <button onClick={handleReset} className=\"button\">Borrar</button>\n        </>}\n        </main>\n      <footer className=\"footer\">\n        <h4>&copy; 2020 Christina Lorenzo Montes</h4>\n      </footer>\n </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}
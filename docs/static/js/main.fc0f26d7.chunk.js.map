{"version":3,"sources":["components/Input/Input.js","components/Form/Form.js","components/Results/Result.js","App.js","index.js"],"names":["Input","id","type","placeholder","options","onChange","value","console","log","map","option","key","text","Form","inputFields","onInputChange","inputValues","className","label","ev","Result","resultado","ganarMasa","perderGrasa","proteinasVolumen","proteinasDefinicion","grasasVolumen","grasasDefinicion","carbosVolumen","carbosDefinicion","toFixed","initialFormState","gender","age","weight","height","phisicalActivity","App","useState","setInputValues","isFormSubmited","setIsFormSubmited","parseInt","resultadoGanarMasa","parseFloat","resultadoPerderGrasa","getMacronutrients","number","resultadoProteinasVolumen","resultadoProteinasDefinicion","resultadoGrasasVolumen","resultadoGrasasDefinicion","resultadoCarbosVolumen","resultadoCarbosDefinicion","formData","target","onClick","alert","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fc0f26d7.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nconst Input = ({id, type, placeholder, options, onChange, value}) => {\r\n  console.log('hola soy ' + value + 'en input')\r\n\r\n\r\n if (type === 'singleselect') {\r\n      return (\r\n        <select id={id} placeholder={placeholder} onChange={onChange} value={value}\r\n        >\r\n              {options.map((option) => (\r\n                  <option key={option.key} value={option.value}>{option.text}</option>\r\n          ))}\r\n        </select>\r\n      );\r\n    }\r\n  \r\n    return (\r\n      <input\r\n        id={id}\r\n        placeholder={placeholder}\r\n        type={type}\r\n        onChange={onChange}\r\n        value={value}\r\n      ></input>\r\n    );\r\n}\r\n\r\nexport default Input;","import React from 'react';\r\nimport Input from '../Input/Input';\r\n\r\n\r\nconst Form = ({inputFields, onInputChange, inputValues}) => {\r\n\r\n  return (\r\n    <form>\r\n      <h1 className=\"h1\">Calcular calorías diarias según tus objetivos</h1>\r\n      <h2 className=\"h2\">Vamos a conocernos un poquito más</h2>\r\n    {inputFields.map(({label, id, type, placeholder, options}) => \r\n    <>\r\n            <label>{label}</label>\r\n            <Input id={id} type={type} placeholder={placeholder} options={options} value={inputValues[id]} onChange={(ev) => onInputChange(ev, id)}\r\n />\r\n    </>)}\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Form;","import React from 'react';\r\n\r\nconst Result = ({resultado, ganarMasa, perderGrasa, proteinasVolumen, proteinasDefinicion, grasasVolumen, grasasDefinicion, carbosVolumen, carbosDefinicion}) => {\r\n    return (\r\n        <>\r\n            <h3>Tus calorías diarias para manenerte son: {resultado.toFixed(2)}.</h3>\r\n            <h3>Tus calorías diarias para manenerte son:  {ganarMasa.toFixed(2)}.</h3>\r\n            <h3>Tus calorías diarias para manenerte son:  {perderGrasa.toFixed(2)}.</h3>\r\n            <h3>Tus calorías diarias para manenerte son:  {proteinasVolumen.toFixed(2)}.</h3>\r\n            <h3>Tus calorías diarias para manenerte son:  {proteinasDefinicion.toFixed(2)}.</h3>\r\n            <h3>Tus calorías diarias para manenerte son:  {grasasVolumen.toFixed(2)}.</h3>\r\n            <h3>Tus calorías diarias para manenerte son:  {grasasDefinicion.toFixed(2)}.</h3>\r\n            <h3>Tus calorías diarias para manenerte son:  {carbosVolumen.toFixed(2)}.</h3>\r\n            <h3>Tus calorías diarias para manenerte son:  {carbosDefinicion.toFixed(2)}.</h3>\r\n        </>\r\n    )\r\n};\r\n  \r\n  export default Result;","import React, {useState} from 'react';\nimport './App.css';\nimport Form from './components/Form/Form';\nimport formData from './data/form.json';\nimport Result from './components/Results/Result';\n\n\nconst initialFormState = {\ngender: \"n\", \nage: \"\", \nweight: \"\",\nheight: \"\",\nphisicalActivity: \"n\"}\n\nconst App = () => {\n  const [inputValues, setInputValues] = useState(initialFormState) \n  const [isFormSubmited, setIsFormSubmited] = useState(false)\n\n  const handleInputChange = (ev, id) => setInputValues({ ...inputValues, [id]: ev.target.value });\n\n  const handdleButton = () => {\n    const {gender,\n      age,\n      weight,\n      height,\n      phisicalActivity } = inputValues;\n  \n  \n  if (gender === \"\"){\n        alert('Necesitamos conocer tu sexo para ajustar el cálculo lo máximo posible')\n        return\n        }\n  if (age === \"\"){\n    alert('La edad es solo un número, ¡pon tu edad anda!')\n    return\n    }\n  if (height === \"\"){\n      alert('No olvides poner tu altura')\n      return\n      }\n  if (weight === \"\"){\n        alert('Tu peso no te define, ¡así que ponlo sin miedo')\n        return\n  }\n    if (phisicalActivity === \"\") {\n      alert('¿Cuánto deporte haces semanalmente?')\n      return\n  }  \n\n    setIsFormSubmited(true)\n  }\n\nlet resultado = ((9.99 * parseInt(inputValues.weight)) + (6.25 * parseInt(inputValues.height)) + (4.92 * parseInt(inputValues.age)) - 50) - 200\nif (inputValues.gender === \"f\") resultado = resultado - 200\nconst multiplier = parseFloat(inputValues.phisicalActivity)\nresultado = resultado * multiplier;\n\nlet resultadoGanarMasa = resultado + 300;\nlet resultadoPerderGrasa = resultado - 300;\n\nconst getMacronutrients = (number) => inputValues.weight * number \n\nconst resultadoProteinasVolumen = getMacronutrients(2.5)\nconst resultadoProteinasDefinicion = getMacronutrients(3)\nconst resultadoGrasasVolumen =  getMacronutrients(1)\nconst resultadoGrasasDefinicion = getMacronutrients(0.75)\n\nlet resultadoCarbosVolumen = ((resultadoGanarMasa - (resultadoProteinasVolumen * 4) - (resultadoGrasasVolumen * 9)) / 4);\nlet resultadoCarbosDefinicion = ((resultadoPerderGrasa - (resultadoProteinasDefinicion * 4) - (resultadoGrasasDefinicion * 9)) / 4);\n\n\n  const handleReset = () => {\n    setInputValues(initialFormState);\n    setIsFormSubmited(false)\n  }\n  \n  return (\n    <div className=\"App\">\n      <Form inputFields={formData.inputFields} onInputChange={handleInputChange} inputValues={inputValues} />\n      <button onClick={handdleButton}>Calcular</button>\n      {isFormSubmited && <>\n      <Result resultado={resultado} ganarMasa={resultadoGanarMasa} perderGrasa={resultadoPerderGrasa} proteinasVolumen={resultadoProteinasVolumen} proteinasDefinicion={resultadoProteinasDefinicion} grasasVolumen={resultadoGrasasVolumen} grasasDefinicion={resultadoGrasasDefinicion} carbosVolumen={resultadoCarbosVolumen} carbosDefinicion={resultadoCarbosDefinicion}/>\n      <button onClick={handleReset}>Borrar</button>\n      </>}\n </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}